 const tableStyle = {
        showHeaders: true,
        theme: 'Table Style Light 1', // You can choose a different table style theme if desired
      };

      // Apply custom styles to alternate rows in the table body
      const bodyRange = XLSX.utils.decode_range(worksheet['!ref']);
      for (let row = bodyRange.s.r + 1; row <= bodyRange.e.r; row += 2) {
        const rowRange = XLSX.utils.encode_range({ s: { r: row, c: bodyRange.s.c }, e: { r: row, c: bodyRange.e.c } });
        XLSX.utils.sheet_set_range_style(worksheet, rowRange, { fill: { fgColor: { rgb: 'F0F0F0' } } });
      }

      // Format the worksheet as a table with header and body styles
      const range = XLSX.utils.decode_range(worksheet['!ref']);
      const tableRange = XLSX.utils.encode_range(range);
      XLSX.utils.sheet_add_table(worksheet, tableRange, tableStyle);

      // Add the worksheet to the workbook
      XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet 1');

      // Convert the workbook to an Excel file buffer
      const excelBuffer = XLSX.write(workbook, {
        bookType: 'xlsx',
        type: 'array',
      });

      // Create a Blob from the buffer
      const blob = new Blob([excelBuffer], {
        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      });

      // Save the file using FileSaver.js
      saveAs(blob, 'api_data.xlsx');
    })