const downloadExcel = () => {
  // Fetch API data
  fetch('https://api.example.com/data')
    .then(response => response.json())
    .then(data => {
      // Select desired columns from API data
      const selectedColumns = data.map(item => {
        return {
          id: item.id,
          name: item.name,
          // Add more properties as needed
        };
      });

      // Create a new workbook
      const workbook = XLSX.utils.book_new();

      // Convert the selectedColumns data to a worksheet
      const worksheet = XLSX.utils.json_to_sheet(selectedColumns);

      // Define cell styles for header and body
      const headerStyle = {
        fill: {
          fgColor: { rgb: 'C0C0C0' }, // Light gray color
        },
        font: {
          bold: true,
        },
      };

      const bodyStyle = {
        fill: {
          fgColor: { rgb: 'FFFFFF' }, // White color
        },
      };

      // Set cell styles for the header row
      const headerRange = XLSX.utils.decode_range(worksheet['!ref']);
      for (let col = headerRange.s.c; col <= headerRange.e.c; col++) {
        const cellRef = XLSX.utils.encode_cell({ r: 0, c: col });
        worksheet[cellRef].s = headerStyle;
      }

      // Apply cell styles to the body rows
      for (let row = headerRange.s.r + 1; row <= headerRange.e.r; row++) {
        for (let col = headerRange.s.c; col <= headerRange.e.c; col++) {
          const cellRef = XLSX.utils.encode_cell({ r: row, c: col });
          worksheet[cellRef].s = bodyStyle;
        }
      }

      // Define table formatting options
      const tableOptions = {
        showRowStripes: true,
      };

      // Add the worksheet to the workbook with table formatting
      XLSX.utils.book_append_sheet(workbook, worksheet, 'Sheet 1', tableOptions);

      // Convert the workbook to an Excel file buffer
      const excelBuffer = XLSX.write(workbook, {
        bookType: 'xlsx',
        type: 'array',
      });

      // Create a Blob from the buffer
      const blob = new Blob([excelBuffer], {
        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
      });

      // Save the file using FileSaver.js
      saveAs(blob, 'api_data.xlsx');
    })
    .catch(error => {
      console.error('Error:', error);
    });
};
