import React from 'react';
import ExcelJS from 'exceljs';
import { saveAs } from 'file-saver';

const downloadExcel = () => {
  // Create a new workbook
  const workbook = new ExcelJS.Workbook();

  // Add a worksheet to the workbook
  const worksheet = workbook.addWorksheet('Sheet 1');

  // Define your table data (example)
  const tableData = [
    ['Header 1', 'Header 2', 'Header 3'],
    ['Value 1', 'Value 2', 'Value 3'],
    ['Value 4', 'Value 5', 'Value 6'],
  ];

  // Set the header row
  const headerRow = worksheet.addRow(tableData[0]);
  headerRow.font = { bold: true };

  // Add the remaining data rows
  for (let i = 1; i < tableData.length; i++) {
    worksheet.addRow(tableData[i]);
  }

  // Auto-fit column widths
  worksheet.columns.forEach(column => {
    column.width = 15;
  });

  // Apply styles to the table
  worksheet.eachRow({ includeEmpty: true }, row => {
    row.eachCell(cell => {
      cell.border = {
        top: { style: 'thin' },
        left: { style: 'thin' },
        bottom: { style: 'thin' },
        right: { style: 'thin' },
      };
      cell.alignment = { vertical: 'middle', horizontal: 'center' };

      if (row.number % 2 === 0) {
        // Apply alternate row color
        cell.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'F0F0F0' } };
      }
    });
  });

  // Generate an Excel buffer
  workbook.xlsx.writeBuffer().then(buffer => {
    // Create a Blob from the buffer
    const blob = new Blob([buffer], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });

    // Save the file using FileSaver.js
    saveAs(blob, 'customized_table.xlsx');
  });
};